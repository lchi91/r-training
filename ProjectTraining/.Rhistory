y <- sample(x,5)
avg[i] <- mean(y)
}
set.seed(1)
n <- 1000
avg <- vector("avg", 1000)
for (i in 1:n) {
y <- sample(x,5)
avg[i] <- mean(y)
}
set.seed(1)
n <- 1000
avg <- vector(1000)
for (i in 1:n) {
y <- sample(x,5)
avg[i] <- mean(y)
}
set.seed(1)
n <- 1000
avg <- vector("numeric", 1000)
for (i in 1:n) {
y <- sample(x,5)
avg[i] <- mean(y)
}
avg
mean(avg - mean(x)>1)
set.seed(1)
n <- 1000
avg <- vector("numeric", 1000)
for (i in 1:n) {
y <- sample(x,5)
avg[i] <- mean(y)
}
avg
# What proportion of these 1,000 averages are more than 1 gram away from the average of x ?
sum(avg - mean(x)>1)
# What proportion of these 1,000 averages are more than 1 gram away from the average of x ?
mean(x)
mean(abs(avg - mean(x))>1)
set.seed(1)
n <- 10000
avg <- vector("numeric", n)
for (i in 1:n) {
y <- sample(x,5)
avg[i] <- mean(y)
}
# What proportion of these 1,000 averages are more than 1 gram away from the average of x ?
mean(abs(avg - mean(x))>1)
set.seed(1)
n <- 1000
avg <- vector("numeric", n)
for (i in 1:n) {
y <- sample(x,50)
avg[i] <- mean(y)
}
# What proportion of these 1,000 averages are more than 1 gram away from the average of x ?
mean(abs(avg - mean(x))>1)
install.packages("gapminder")
library(gapminder)
data(gapminder)
head(gapminder)
x <- gapmider[,4]
x <- gapminder[,4]
x <- gapminder[,c("lifeExp")]
mean(x<=40)
x <- gapminder[,c("lifeExp"), year ==1952]
x <- gapminder[,c("lifeExp"), "year" ==1952]
hist(x)
x <- gapminder[,c("lifeExp"), "year" ==1952] %>& unlist
x <- unlist(gapminder[,c("lifeExp"), "year" ==1952])
hist(x)
x <- filter(gapminder,"year" ==1952) %>%
select("country","lifeExp") %>% unlist
library(dplyr)
x <- filter(gapminder,"year" ==1952) %>%
select("country","lifeExp") %>% unlist
hist(x)
x
load("~/R/StatisticsAndR/skew.RData")
x <- filter(gapminder,"year" ==1952) %>%
select(country,lifeExp) %>% unlist
x
x <- filter(gapminder,"year" == 1952) %>%
select(country,lifeExp) %>% unlist
x <- filter(gapminder,"year" == 1952)
x <- filter(gapminder,year == 1952) %>%
select(country,lifeExp) %>% unlist
x
x <- filter(gapminder,year == 1952) %>%
select(country~lifeExp) %>% unlist
x <- filter(gapminder,year == 1952) %>%
select(c(country,lifeExp)) %>% unlist
x
x <- filter(gapminder,year == 1952) %>%
select(country,lifeExp) %>% unlist
dim(x)
class(x)
hist(x$country,x%lifeExp)
hist(x)
x[,1]
x[1]
x[3]
x <- filter(gapminder,year == 1952) %>%
select("country",lifeExp) %>% unlist
hist(x)
x
gapminder[,1]
gapminder$country
x <- data.frame(gapminder$country,gapminder$lifeExp, year==1952)
x <- data.frame(gapminder$country,gapminder$lifeExp, gapminder$year==1952)
x
head(x)
head(gapminder)
x <- gapminder[,c(1,4), year == 1952]
x <- gapminder[,c(1,4), "year" == 1952]
head(x)
x <- gapminder[,c(1,4), gapminder$year == 1952]
x <- filter(gapminder, year == 1952) %>%
select(lifeExp) %>% unlist
x <- filter(gapminder, year == 1952) %>%
select(country,lifeExp) %>% unlist
x <- filter(gapminder, year == 1952) %>%
select(lifeExp) %>% unlist
exm <- gapminder <- select(country,lifeExp) %>%
filter(year == 1952)
exm <- gapminder <- select(country, year,lifeExp) %>%
filter(year == 1952)
exm <- gapminder %>% select(country,lifeExp) %>%
filter(year == 1952)
exm <- gapminder %>% select(country,year,lifeExp) %>%
filter(year == 1952)
exm <- gapminder %>% filter(year == 1952)  %>%
select(country,year,lifeExp)
exm <- gapminder %>% filter(year == 1952)  %>%
select(country,lifeExp)
hist(exm)
x <- filter(gapminder, year == 1952) %>%
select(lifeExp) %>% unlist
mean(x<=40)
mean(<=60)-mean(x<=40)
mean(x<=60)-mean(x<=40)
plot(ecdf(x))
qs = seq(from = min(x), to = max(x), length(20))
props = sapply(qs, prop)
prop = function(q) {
mean(x <= q)
}
props = sapply(qs, prop)
plot(props)
max(x)
max(qs)
props
plot(qs)
x <- read.csv("femaleControlsPopulation.csv")
# make averages5
set.seed(1)
n <- 1000
averages5 <- vector("numeric",n)
for(i in 1:n){
X <- sample(x,5)
averages5[i] <- mean(X)
}
# make averages50
set.seed(1)
n <- 1000
averages50 <- vector("numeric",n)
for(i in 1:n){
X <- sample(x,50)
averages50[i] <- mean(X)
}
x <- read.csv("femaleControlsPopulation.csv")
# make averages5
set.seed(1)
n <- 1000
averages5 <- vector("numeric",n)
for(i in 1:n){
X <- sample(x,5)
averages5[i] <- mean(X)
}
for(i in 1:n){
y <- sample(x,5)
averages5[i] <- mean(y)
}
x <- unlist( read.csv("femaleControlsPopulation.csv"))
# make averages5
set.seed(1)
n <- 1000
averages5 <- vector("numeric",n)
for(i in 1:n){
y <- sample(x,5)
averages5[i] <- mean(y)
}
# make averages50
set.seed(1)
n <- 1000
averages50 <- vector("numeric",n)
for(i in 1:n){
X <- sample(x,50)
averages50[i] <- mean(X)
}
hist(averages5)
hist(averages50)
par(mfrow = c(1,2))
hist(averages5)
hist(averages50)
# last set X
X
mean(X<=25)-mean(X<=23)
mean(X)
averages50[1,]
averages50[1000]
set.seed(1)
n <- 1000
averages5 <- vector("numeric",n)
for(i in 1:n){
y <- sample(x,5)
averages5[i] <- mean(y)
}
set.seed(1)
n <- 1000
averages50 <- vector("numeric",n)
for(i in 1:n){
X <- sample(x,50)
averages50[i] <- mean(X)
}
mean(x <= q)
mean(a <= q)
mean(X <= q)
class(X)
mean(X<=25)
mean(X<=23)
prop = function(q) {
mean(X <= q)
}
prop(25)-prop(23)
pnorm(q, mean(X),sd(X))
mean(X)
sd(X)
class(mean(X))
pnorm(25, mean(X),sd(X)
pnorm(25, mean(X),sd(X)
pnorm(25, mean(X),sd(X))
pnorm(25, mean(X),sd(X)) - pnorm(23, mean(X),sd(X))
prop = function(q) {
mean(x <= q)
}
mean(X<=25) - mean(X<=23)
# last set X
a <- averages50[1000]
library(downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/femaleControlsPopulation.csv"
filename <- basename(url)
download(url, destfile=filename)
x <- unlist( read.csv(filename) )
# make averages5
set.seed(1)
n <- 1000
averages5 <- vector("numeric",n)
for(i in 1:n){
X <- sample(x,5)
averages5[i] <- mean(X)
}
# make averages50
set.seed(1)
n <- 1000
averages50 <- vector("numeric",n)
for(i in 1:n){
X <- sample(x,50)
averages50[i] <- mean(X)
}
# last set 50
mean(X<=25) - mean(X<=23)
# make averages50
set.seed(1)
n <- 1000
averages50 <- vector("numeric",n)
for(i in 1:n){
X <- sample(x,50)
averages50[i] <- mean(X)
}
pnorm(25, 23.9,0.43) - pnorm(23,23.9,0.43)
pnorm(25, 23.9,0.43)
pnorm(23,23.9,0.43)
# last set 50
hist(X)
mean(X)
sd(X)
sd(x)
plot(X)
# last set 50
hist(X, ylim = 1)
# last set 50
hist(X, ylim = 50)
plot(density(X))
mean(X<=30)
mean(X<=28)
mean(X<=25)
mean(x<=25) - mean(x<=23)
plot(density(x))
mean(averages50<=25) - mean(averages50<=23)
pnorm(averages50)
plot(pnorm(averages50))
qqplot(x, averages50)
qqnorm(x)
qqplot(x, averages50)
library(downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/mice_pheno.csv"
filename <- basename(url)
download(url, destfile=filename)
dat <- read.csv(filename)
dat <- na.omit(dat)
head(dat)
lenght(dat[,1])
length(dat[,1])
summarise(dat[,1])
class(dat[,1])
levels(dat[,1])
levels(dat[,2])
malesCtrl <- dat %>% filter(Sex == "M" & Diet == "Chow") %>%
select(Bodyweight) %>% unlist
malesCtrl <- dat %>% filter(Sex == "M" & Diet == "Chow") %>%
select(Bodyweight)
malesCtrl <- dat %>% filter(Sex == "M", Diet == "Chow") %>%
select(Bodyweight)
library(dplyr)
malesCtrl <- dat %>% filter(Sex == "M", Diet == "Chow") %>%
select(Bodyweight)
malesCtrl <- dat %>% filter(Sex == "M") %>%
select(Bodyweight)
malesCtrl <- dat %>% filter(Sex == "M" & Diet == "Chow") %>%
select(Bodyweight)
malesCtrl <- dat %>% filter(Sex == "M" & Diet == "chow") %>%
select(Bodyweight)
mean(malesCtrl)
malesCtrl <- dat %>% filter(Sex == "M" & Diet == "chow") %>%
select(Bodyweight) %>% unlist
mean(malesCtrl)
install.packages("rafalib")
library(rafalib)
?popsd
popsd(malesCtrl)
set.seed(1)
X <- sample(x,25)
mean(X)
x <- dat %>% filter(Sex == "M" & Diet == "chow") %>%
select(Bodyweight) %>% unlist
mean(x)
popsd(x)
set.seed(1)
X <- sample(x,25)
mean(X)
y <- dat %>% filter(Sex == "M" & Diet == "hf") %>%
select(Bodyweight) %>% unlist
mean(y)
popsd(y)
se.seed(1)
Y <- sample(y,25)
mean(Y)
set.seed(1)
Y <- sample(y,25)
mean(Y)
abs(mean(y)-mean(x)-(mean(Y)-mean(X)))
a <- dat %>% filter(Sex == "F" & Diet == "chow") %>%
select(Bodyweight) %>% unlist
mean(a)
# popsd: tra ve do lech chuan tong the population standard deviation,
# sd() tra ve do lech chuan, uoc luong khong chech cua phuong sai tong the va = var*(n-1)/n
popsd(a)
set.seed(2)
A <- sample(a,25)
mean(A)
b <- dat %>% filter(Sex == "F" & Diet == "hf") %>%
select(Bodyweight) %>% unlist
mean(b)
popsd(b)
set.seed(2)
B <- sample(b,25)
mean(B)
abs(mean(b)-mean(a)-(mean(B)-mean(A)))
abs(mean(b)-mean(a)-(mean(A)-mean(B)))
# FEMALES
x <- dat %>% filter(Sex == "F" & Diet == "chow") %>%
select(Bodyweight) %>% unlist
set.seed(1)
X <- sample(x,25)
y <- dat %>% filter(Sex == "F" & Diet == "hf") %>%
select(Bodyweight) %>% unlist
set.seed(2)
X <- sample(x,25)
y <- dat %>% filter(Sex == "F" & Diet == "hf") %>%
select(Bodyweight) %>% unlist
set.seed(2)
Y <- sample(y,25)
abs(mean(y)-mean(x)-(mean(Y)-mean(X)))
library(downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/mice_pheno.csv"
filename <- basename(url)
download(url, destfile=filename)
dat <- na.omit( read.csv(filename) )
head(dat)
library(downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/mice_pheno.csv"
filename <- basename(url)
download(url, destfile=filename)
dat <- read.csv(filename)
pnorm(1)
pnorm(1, 0,1)
pnorm(1)-pnorm(-1)
# --------------------------------------------------------------
# Exercise
# If a list of numbers has a distribution that is well approximated by the normal distribution,
# what proportion of these numbers are within one standard deviation away from the list's average?
pnorm(2)-pnorm(-2)
# --------------------------------------------------------------
# Exercise
# If a list of numbers has a distribution that is well approximated by the normal distribution,
# what proportion of these numbers are within one standard deviation away from the list's average?
pnorm(3)-pnorm(-3)
y <- dat %>% filter(Sex == "M" & Diet == "chow") %>%
select(Bodyweight) %>% unlist
popsd(y)
library(dplyr)
install.packages("rafalib")
install.packages("rafalib")
library(rafalib)
y <- dat %>% filter(Sex == "M" & Diet == "chow") %>%
select(Bodyweight) %>% unlist
popsd(y)
mean(y)
head(y)
mean(y)
y
mean(y)
y <- dat %>% filter(Sex == "M" & Diet == "chow") %>%
select(Bodyweight) %>% unlist
y
mean(y)
length(y)
mean(y)
mean(y,na.rm = True)
mean(y,na.rm = T)
popsd(y)
# We will remove the lines that contain missing values:
dat <- na.omit(dat)
y <- dat %>% filter(Sex == "M" & Diet == "chow") %>%
select(Bodyweight) %>% unlist
length(y)
mean(y,na.rm = T)
mean(y)
popsd(y)
m <- mean(y)
s <- popsd(y)
pnorm(1,m,s) - pnorm(-1,m,s)
pnorm(1,m,s)
pnorm(1,mean(y),popsd(y))
pnorm(1,mean(y),popsd(y))- pnorm(1,mean(y),popsd(y))
pnorm(1,mean(y),popsd(y))- pnorm(-1,mean(y),popsd(y))
pnorm(2,mean(y),popsd(y))- pnorm(-2,mean(y),popsd(y))
hist(y)
plot(density(y),add = T)
qqnorm(y)
bodyweigth <- seq(min(y),max(y),1)
plot(bodyweigth, dnorm(bodyweigth, mean(y), popsd(y)))
plot(bodyweigth, dnorm(bodyweigth, mean(y), popsd(y)),type ="1")
plot(bodyweigth, dnorm(bodyweigth, mean(y), popsd(y)),type ="1")
plot(bodyweigth, dnorm(bodyweigth, mean(y), popsd(y)))
bodyweigth <- seq(min(y),max(y),0.1)
plot(bodyweigth, pnorm(bodyweigth, mean(y), popsd(y)))
pnorm(m+s,m,s)- pnorm(m-s,m,s)
pnorm(m+2s,m,s)- pnorm(m-2s,m,s)
pnorm(m+2*s,m,s)- pnorm(m-2*s,m,s)
head(dat)
mean(dat$Bodyweight)
popm <- mean(dat$Bodyweight)
pnorm(popm+s,m,s)- pnorm(popm-s,m,s)
pops <- popsd(dat$Bodyweight)
pnorm(popm+pops,popm,pops)- pnorm(popm-pops,popm,pops)
popm <- mean(dat$Bodyweight)
pops <- popsd(dat$Bodyweight)
pnorm(popm+pops,popm,pops)- pnorm(popm-pops,popm,pops)
pops
popm
pnorm(m+s,m,s)- pnorm(m-s,m,s)
pnorm(m+3*s,m,s)- pnorm(m-3*s,m,s)
z <- ( y - mean(y) ) / popsd(y)
mean( abs(z) <=1 )
z
mean( abs(z) <=2 )
qqnorm(y);abline(0,1)
qqnorm(y);abline(0,1)
mypar(2,2)
y <- filter(dat, Sex=="M" & Diet=="chow") %>% select(Bodyweight) %>% unlist
z <- ( y - mean(y) ) / popsd(y)
qqnorm(z);abline(0,1)
y <- filter(dat, Sex=="F" & Diet=="chow") %>% select(Bodyweight) %>% unlist
z <- ( y - mean(y) ) / popsd(y)
qqnorm(z);abline(0,1)
y <- filter(dat, Sex=="M" & Diet=="hf") %>% select(Bodyweight) %>% unlist
z <- ( y - mean(y) ) / popsd(y)
qqnorm(z);abline(0,1)
y <- filter(dat, Sex=="F" & Diet=="hf") %>% select(Bodyweight) %>% unlist
z <- ( y - mean(y) ) / popsd(y)
qqnorm(z);abline(0,1)
y <- filter(dat, Sex=="M" & Diet=="chow") %>% select(Bodyweight) %>% unlist
set.seed(1)
avgs <- replicate(10000, mean( sample(y, 25)))
mypar(1,2)
hist(avgs)
qqnorm(avgs)
qqline(avgs)
mean(avgs)
popsd(avgs)
